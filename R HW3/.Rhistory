mz_offset
intensity_length <- spectra_info %>%
map_dbl(~ xml_find_by_attribute(.$intensity,
"name",
"external array length") %>%
xml_attr("value") %>% as.numeric())
intensity_length
intensity_offset <- spectra_info %>%map_dbl(~ xml_find_by_attribute(.$intensity, "name", "external offset") %>% xml_attr("value") %>% as.numeric())
intensity_offset
get_mz_intensity_arrays <- function () {
filename<-"/Users/yzh/Desktop/R data/HW3/Example_Continuous.ibd"
intensity <- map2(intensity_offset, intensity_length,
function(offset, length) {
f <- file(filename, "rb")
seek(f, offset)
iout <- readBin(f, "double", n=length, size=4)
close(f)
iout })
f <- file(filename, "rb")
seek(f, mz_offset)
mz <- readBin(f, "double", n=mz_length, size=4)
close(f)
return (list(mz,intensity))
}
mz<-get_mz_intensity_arrays()[[1]]
intensity<-get_mz_intensity_arrays()[[2]]
construct <- function(mz,intensity,xcoord,ycoord){ structure(list(mz=mz, intensity=intensity, xcoord=xcoord, ycoord=ycoord), class=c("store_msi"))
}
store<-construct(mz, intensity, coord_x, coord_y)
access_msi<-function(object) UseMethod("access")
access.store_msi <- function (object) return (list(object$mz, object$intensity, object$xcoord,
object$ycoord))
methods(access)
methods(class="store_msi")
methods(access_msi)
access_msi(1)
methods(class="store_msi")
methods(access_msi)
methods(access0
s
methods(access)
str(access_msi(store))
methods(access_msi)
methods(access)
getS3method("access_ms", "store_msi")
getS3method("access_msi", "store_msi")
getS3method("access", "store_msi")
library(xml2)
imzml <- read_xml("/Users/yzh/Desktop/R data/HW3/Example_Continuous.imzML")
insert_ref_groups <- function(x) { ref_groups <- xml_root(x) %>%
xml_child("d1:referenceableParamGroupList") %>%
xml_children()
ref <- xml_child(x, "d1:referenceableParamGroupRef")
name <- xml_attr(ref, "ref")
ref_groups_exist <- xml_attr(ref_groups, "id") %in% name
if ( any(ref_groups_exist) )
group <- ref_groups[[which(ref_groups_exist)]]
for ( g in xml_children(group) )
xml_add_child(x, g)
xml_remove(ref)
x
}
xml_find_by_attribute <- function(x, attr, value) { match <- xml_attr(x, attr) == value
if ( isTRUE(any(match)) ) {
x[[which(match)]] } else {
NULL
} }
get_spectrum_data <- function(x, i) { spectrum <- x %>%
xml_child("d1:run") %>% xml_child("d1:spectrumList") %>% xml_child(i)
spectrum <- insert_ref_groups(spectrum)
scan <- spectrum %>%xml_child("d1:scanList") %>%xml_child("d1:scan")
scan <- insert_ref_groups(scan)
data <- spectrum %>%xml_child("d1:binaryDataArrayList") %>%xml_children()
for ( d in data )
insert_ref_groups(d)
data <- lapply(data, xml_children)
for ( i in seq_along(data) ) {
if ( !is.null(xml_find_by_attribute(data[[i]], "name", "m/z array")) )
names(data)[i] <- "mz"
if ( !is.null(xml_find_by_attribute(data[[i]], "name", "intensity array")) )
names(data)[i] <- "intensity"
}
data$coord <- xml_children(scan)
data[c("mz", "intensity", "coord")]
}
get_spectra_n <- function(x) { x %>%xml_child("d1:run") %>% xml_child("d1:spectrumList") %>% xml_attr("count") %>% as.numeric()
}
get_spectra <- function(x) {
n <- get_spectra_n(x)
lapply(1:n, function(i) get_spectrum_data(x, i))
}
x <- imzml
get_spectra_n(x)
spectra_info <- get_spectra(x)
coord_x <- spectra_info %>%
map_dbl(~ xml_find_by_attribute(.$coord, "name", "position x") %>%
xml_attr("value") %>% as.numeric())
coord_x
coord_y <- spectra_info %>%
map_dbl(~ xml_find_by_attribute(.$coord, "name", "position y") %>%
xml_attr("value") %>% as.numeric())
coord_y
mz_length <- spectra_info[[1]]$mz %>% xml_find_by_attribute("name", "external array length") %>% xml_attr("value")    %>%   as.numeric()
mz_length
mz_offset <- spectra_info[[1]]$mz %>% xml_find_by_attribute("name", "external offset") %>% xml_attr("value") %>%
as.numeric()
mz_offset
intensity_length <- spectra_info %>%
map_dbl(~ xml_find_by_attribute(.$intensity,
"name",
"external array length") %>%
xml_attr("value") %>% as.numeric())
intensity_length
intensity_offset <- spectra_info %>%map_dbl(~ xml_find_by_attribute(.$intensity, "name", "external offset") %>% xml_attr("value") %>% as.numeric())
intensity_offset
get_mz_intensity_arrays <- function () {
filename<-"/Users/yzh/Desktop/R data/HW3/Example_Continuous.ibd"
intensity <- map2(intensity_offset, intensity_length,
function(offset, length) {
f <- file(filename, "rb")
seek(f, offset)
iout <- readBin(f, "double", n=length, size=4)
close(f)
iout })
f <- file(filename, "rb")
seek(f, mz_offset)
mz <- readBin(f, "double", n=mz_length, size=4)
close(f)
return (list(mz,intensity))
}
mz<-get_mz_intensity_arrays()[[1]]
intensity<-get_mz_intensity_arrays()[[2]]
construct <- function(mz,intensity,xcoord,ycoord){ structure(list(mz=mz, intensity=intensity, xcoord=xcoord, ycoord=ycoord), class=c("store_msi"))
}
store<-construct(mz, intensity, coord_x, coord_y)
access_msi<-function(object) UseMethod("access")
access.store_msi <- function (object) return (list(object$mz, object$intensity, object$xcoord,
object$ycoord))
getS3method("access_msi", "store_msi")
methods(access)
methods(access_msi)
str(access_msi(store))
msi_info
?msi_info
msi_info<- access_msi(store)
mz<-msi_info[[1]]
intensity<-msi_info[[2]]
coord_x<-msi_info[[3]]
coord_y<-msi_info[[4]]
simplify2array(intensity)
library(xml2)
imzml <- read_xml("/Users/yzh/Desktop/R data/HW3/Example_Continuous.imzML")
insert_ref_groups <- function(x) { ref_groups <- xml_root(x) %>%
xml_child("d1:referenceableParamGroupList") %>%
xml_children()
ref <- xml_child(x, "d1:referenceableParamGroupRef")
name <- xml_attr(ref, "ref")
ref_groups_exist <- xml_attr(ref_groups, "id") %in% name
if ( any(ref_groups_exist) )
group <- ref_groups[[which(ref_groups_exist)]]
for ( g in xml_children(group) )
xml_add_child(x, g)
xml_remove(ref)
x
}
xml_find_by_attribute <- function(x, attr, value) { match <- xml_attr(x, attr) == value
if ( isTRUE(any(match)) ) {
x[[which(match)]] } else {
NULL
} }
get_spectrum_data <- function(x, i) { spectrum <- x %>%
xml_child("d1:run") %>% xml_child("d1:spectrumList") %>% xml_child(i)
spectrum <- insert_ref_groups(spectrum)
scan <- spectrum %>%xml_child("d1:scanList") %>%xml_child("d1:scan")
scan <- insert_ref_groups(scan)
data <- spectrum %>%xml_child("d1:binaryDataArrayList") %>%xml_children()
for ( d in data )
insert_ref_groups(d)
data <- lapply(data, xml_children)
for ( i in seq_along(data) ) {
if ( !is.null(xml_find_by_attribute(data[[i]], "name", "m/z array")) )
names(data)[i] <- "mz"
if ( !is.null(xml_find_by_attribute(data[[i]], "name", "intensity array")) )
names(data)[i] <- "intensity"
}
data$coord <- xml_children(scan)
data[c("mz", "intensity", "coord")]
}
get_spectra_n <- function(x) { x %>%xml_child("d1:run") %>% xml_child("d1:spectrumList") %>% xml_attr("count") %>% as.numeric()
}
get_spectra <- function(x) {
n <- get_spectra_n(x)
lapply(1:n, function(i) get_spectrum_data(x, i))
}
x <- imzml
get_spectra_n(x)
spectra_info <- get_spectra(x)
coord_x <- spectra_info %>%
map_dbl(~ xml_find_by_attribute(.$coord, "name", "position x") %>%
xml_attr("value") %>% as.numeric())
coord_x
coord_y <- spectra_info %>%
map_dbl(~ xml_find_by_attribute(.$coord, "name", "position y") %>%
xml_attr("value") %>% as.numeric())
coord_y
mz_length <- spectra_info[[1]]$mz %>% xml_find_by_attribute("name", "external array length") %>% xml_attr("value")    %>%   as.numeric()
mz_length
mz_offset <- spectra_info[[1]]$mz %>% xml_find_by_attribute("name", "external offset") %>% xml_attr("value") %>%
as.numeric()
mz_offset
intensity_length <- spectra_info %>%
map_dbl(~ xml_find_by_attribute(.$intensity,
"name",
"external array length") %>%
xml_attr("value") %>% as.numeric())
intensity_length
intensity_offset <- spectra_info %>%map_dbl(~ xml_find_by_attribute(.$intensity, "name", "external offset") %>% xml_attr("value") %>% as.numeric())
intensity_offset
get_mz_intensity_arrays <- function () {
filename<-"/Users/yzh/Desktop/R data/HW3/Example_Continuous.ibd"
intensity <- map2(intensity_offset, intensity_length,
function(offset, length) {
f <- file(filename, "rb")
seek(f, offset)
iout <- readBin(f, "double", n=length, size=4)
close(f)
iout })
f <- file(filename, "rb")
seek(f, mz_offset)
mz <- readBin(f, "double", n=mz_length, size=4)
close(f)
return (list(mz,intensity))
}
mz<-get_mz_intensity_arrays()[[1]]
intensity<-get_mz_intensity_arrays()[[2]]
msi <- structure(list(mz=mz, intensity=simplify2array(intensity),
coord=tibble(x=coord_x, y=coord_y)), class="msi")
msi
str(msi)
library(xml2)
imzml <- read_xml("/Users/yzh/Desktop/R data/HW3/Example_Continuous.imzML")
insert_ref_groups <- function(x) { ref_groups <- xml_root(x) %>%
xml_child("d1:referenceableParamGroupList") %>%
xml_children()
ref <- xml_child(x, "d1:referenceableParamGroupRef")
name <- xml_attr(ref, "ref")
ref_groups_exist <- xml_attr(ref_groups, "id") %in% name
if ( any(ref_groups_exist) )
group <- ref_groups[[which(ref_groups_exist)]]
for ( g in xml_children(group) )
xml_add_child(x, g)
xml_remove(ref)
x
}
xml_find_by_attribute <- function(x, attr, value) { match <- xml_attr(x, attr) == value
if ( isTRUE(any(match)) ) {
x[[which(match)]] } else {
NULL
} }
get_spectrum_data <- function(x, i) { spectrum <- x %>%
xml_child("d1:run") %>% xml_child("d1:spectrumList") %>% xml_child(i)
spectrum <- insert_ref_groups(spectrum)
scan <- spectrum %>%xml_child("d1:scanList") %>%xml_child("d1:scan")
scan <- insert_ref_groups(scan)
data <- spectrum %>%xml_child("d1:binaryDataArrayList") %>%xml_children()
for ( d in data )
insert_ref_groups(d)
data <- lapply(data, xml_children)
for ( i in seq_along(data) ) {
if ( !is.null(xml_find_by_attribute(data[[i]], "name", "m/z array")) )
names(data)[i] <- "mz"
if ( !is.null(xml_find_by_attribute(data[[i]], "name", "intensity array")) )
names(data)[i] <- "intensity"
}
data$coord <- xml_children(scan)
data[c("mz", "intensity", "coord")]
}
get_spectra_n <- function(x) { x %>%xml_child("d1:run") %>% xml_child("d1:spectrumList") %>% xml_attr("count") %>% as.numeric()
}
get_spectra <- function(x) {
n <- get_spectra_n(x)
lapply(1:n, function(i) get_spectrum_data(x, i))
}
x <- imzml
get_spectra_n(x)
spectra_info <- get_spectra(x)
coord_x <- spectra_info %>%
map_dbl(~ xml_find_by_attribute(.$coord, "name", "position x") %>%
xml_attr("value") %>% as.numeric())
coord_x
coord_y <- spectra_info %>%
map_dbl(~ xml_find_by_attribute(.$coord, "name", "position y") %>%
xml_attr("value") %>% as.numeric())
coord_y
mz_length <- spectra_info[[1]]$mz %>% xml_find_by_attribute("name", "external array length") %>% xml_attr("value")    %>%   as.numeric()
mz_length
mz_offset <- spectra_info[[1]]$mz %>% xml_find_by_attribute("name", "external offset") %>% xml_attr("value") %>%
as.numeric()
mz_offset
intensity_length <- spectra_info %>%
map_dbl(~ xml_find_by_attribute(.$intensity,
"name",
"external array length") %>%
xml_attr("value") %>% as.numeric())
intensity_length
intensity_offset <- spectra_info %>%map_dbl(~ xml_find_by_attribute(.$intensity, "name", "external offset") %>% xml_attr("value") %>% as.numeric())
intensity_offset
get_mz_intensity_arrays <- function () {
filename<-"/Users/yzh/Desktop/R data/HW3/Example_Continuous.ibd"
intensity <- map2(intensity_offset, intensity_length,
function(offset, length) {
f <- file(filename, "rb")
seek(f, offset)
iout <- readBin(f, "double", n=length, size=4)
close(f)
iout })
f <- file(filename, "rb")
seek(f, mz_offset)
mz <- readBin(f, "double", n=mz_length, size=4)
close(f)
return (list(mz,intensity))
}
mz<-get_mz_intensity_arrays()[[1]]
intensity<-get_mz_intensity_arrays()[[2]]
construct <- function(mz, intensity, coord_x,coord_y) {structure(list(mz=mz, intensity=simplify2array(intensity),
coord=tibble(x=coord_x, y=coord_y)), class="msi")
}
msi<-construct(mz, intensity, coord_x, coord_y)
str(msi)
?simplify2array
access<-function(object) UseMethod("access")
access.msi <- function (object) return (object)
methods(class="msi")
str(access(msi))
plot
plot_msi
?plot
msi<-access(msi)
plot_msi <- function(a,b) UseMethod("plot_msi")
plot_msi <- function(x, mz) {
idx <- which.min(abs(mz - x$mz))
idf <- x$coord
idf$intensity <- x$intensity[idx,]
ggplot(idf) +
geom_tile(aes(x=x, y=y, fill=intensity)) +
scale_y_reverse() }
plo_msi(msi, 151.9)
plot_msi(msi, 151.9)
str(msi)
msi<-access(msi)
plot_msi <- function(a,b) UseMethod("plot_msi")
plot_msi.msi <- function(x, mz) {
idx <- which.min(abs(mz - x$mz))
idf <- x$coord
idf$intensity <- x$intensity[idx,]
ggplot(idf) +
geom_tile(aes(x=x, y=y, fill=intensity)) +
scale_y_reverse() }
plot_msi(msi, 151.9)
plot_msi(msi, 151.9)
getwd()
getwd()
a
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
opts_chunk$set(tidy.opts=list(width.cutoff=25),tidy=TRUE)
library(tidyverse)
library(modelr)
mpgx<-transmute(mpg,cyl2=as.factor(cyl),year=as.factor(year),trans=as.factor(trans),
drv=as.factor(drv),fl=factor(fl),class=as.factor(class),cty=cty,
hwy=hwy,displ=displ,)
ggplot(data=mpgx)+geom_point(aes(x=cty,y=hwy))
ggplot(data=mpgx)+geom_point(aes(x=cyl2,y=hwy))
ggplot(data=mpgx)+geom_point(aes(x=fl,y=hwy))
fit_mpg<-lm(hwy~cty+cyl2+fl,data=mpgx)
fit_mpg
rmse(fit_mpg,mpgx)
mpgx %>% add_residuals(fit_mpg,"lresi") %>% ggplot(aes(sample=lresi))+geom_qq()
mpgx %>% add_residuals(fit_mpg,"lresi") %>% ggplot(aes(x=cty,y=lresi))+geom_point()
mpgx %>% add_residuals(fit_mpg,"lresi") %>% ggplot(aes(x=cyl2,y=lresi))+geom_boxplot()
mpgx %>% add_residuals(fit_mpg,"lresi") %>% ggplot(aes(x=fl,y=lresi))+geom_boxplot()
resi_mpg<-mpgx %>% add_residuals(fit_mpg,"lresi")
ggplot(data=resi_mpg,aes(x=displ,y=lresi))+geom_point()
ggplot(data=resi_mpg,aes(x=year,y=lresi))+geom_boxplot()
ggplot(data=resi_mpg,aes(x=trans,y=lresi))+geom_boxplot()
ggplot(data=resi_mpg,aes(x=drv,y=lresi))+geom_boxplot()
ggplot(data=resi_mpg,aes(x=class,y=lresi))+geom_boxplot()
fit2_mpg<-lm(hwy~cty+trans+drv+class+fl,data=mpgx)
fit2_mpg
rmse(fit2_mpg,mpgx)
mpgx %>% add_residuals(fit2_mpg,"lresi") %>% ggplot(aes(sample=lresi))+geom_qq()
mpgx %>% add_residuals(fit2_mpg,"lresi") %>% ggplot(aes(x=cty,y=lresi))+geom_point()
mpgx %>% add_residuals(fit2_mpg,"lresi") %>% ggplot(aes(x=cyl2,y=lresi))+geom_boxplot()
mpgx %>% add_residuals(fit2_mpg,"lresi") %>% ggplot(aes(x=fl,y=lresi))+geom_boxplot()
resi2_mpg<-mpgx %>% add_residuals(fit2_mpg,"lresi")
ggplot(data=resi2_mpg,aes(x=year,y=lresi))+geom_boxplot()
ggplot(data=resi2_mpg,aes(x=trans,y=lresi))+geom_boxplot()
ggplot(data=resi2_mpg,aes(x=drv,y=lresi))+geom_boxplot()
ggplot(data=resi2_mpg,aes(x=class,y=lresi))+geom_boxplot()
crossvalid<-function(model_formula, dataset, num_fold) {
set.seed(2)
crossv<-crossv_kfold(dataset,num_fold)  # dataset should be data frame?
data_fit<-mutate( crossv, fit=map( train, ~lm(model_formula,data=. ) ) )
errorx<-transmute(data_fit, train_error=map2_dbl(fit, train, ~rmse(.x,.y)),
test_error=map2_dbl(fit, test, ~rmse(.x,.y)))
return ( errorx %>% summarize( mean(train_error), mean(test_error) ) )
}
crossvalid( hwy~cty+cyl2, mpgx, 10)
crossvalid( hwy~cty+trans+drv+class, mpgx, 10)
crossvalid( hwy~cty+drv+class ,mpgx, 10)
crossvalid( hwy~cty+drv+class+cyl2 ,mpgx, 10)
library(xml2)
imzml <- read_xml("/Users/yzh/Desktop/R data/HW3/Example_Continuous.imzML")
insert_ref_groups <- function(x) { ref_groups <- xml_root(x) %>%
xml_child("d1:referenceableParamGroupList") %>%
xml_children()
ref <- xml_child(x, "d1:referenceableParamGroupRef")
name <- xml_attr(ref, "ref")
ref_groups_exist <- xml_attr(ref_groups, "id") %in% name
if ( any(ref_groups_exist) )
group <- ref_groups[[which(ref_groups_exist)]]
for ( g in xml_children(group) )
xml_add_child(x, g)
xml_remove(ref)
x
}
xml_find_by_attribute <- function(x, attr, value) { match <- xml_attr(x, attr) == value
if ( isTRUE(any(match)) ) {
x[[which(match)]] } else {
NULL
} }
get_spectrum_data <- function(x, i) { spectrum <- x %>%
xml_child("d1:run") %>% xml_child("d1:spectrumList") %>% xml_child(i)
spectrum <- insert_ref_groups(spectrum)
scan <- spectrum %>%xml_child("d1:scanList") %>%xml_child("d1:scan")
scan <- insert_ref_groups(scan)
data <- spectrum %>%xml_child("d1:binaryDataArrayList") %>%xml_children()
for ( d in data )
insert_ref_groups(d)
data <- lapply(data, xml_children)
for ( i in seq_along(data) ) {
if ( !is.null(xml_find_by_attribute(data[[i]], "name", "m/z array")) )
names(data)[i] <- "mz"
if ( !is.null(xml_find_by_attribute(data[[i]], "name", "intensity array")) )
names(data)[i] <- "intensity"
}
data$coord <- xml_children(scan)
data[c("mz", "intensity", "coord")]
}
get_spectra_n <- function(x) { x %>%xml_child("d1:run") %>% xml_child("d1:spectrumList") %>% xml_attr("count") %>% as.numeric()
}
get_spectra <- function(x) {
n <- get_spectra_n(x)
lapply(1:n, function(i) get_spectrum_data(x, i))
}
x <- imzml
get_spectra_n(x)
spectra_info <- get_spectra(x)
coord_x <- spectra_info %>%
map_dbl(~ xml_find_by_attribute(.$coord, "name", "position x") %>%
xml_attr("value") %>% as.numeric())
coord_x
coord_y <- spectra_info %>%
map_dbl(~ xml_find_by_attribute(.$coord, "name", "position y") %>%
xml_attr("value") %>% as.numeric())
coord_y
mz_length <- spectra_info[[1]]$mz %>% xml_find_by_attribute("name", "external array length") %>% xml_attr("value")    %>%   as.numeric()
mz_length
mz_offset <- spectra_info[[1]]$mz %>% xml_find_by_attribute("name", "external offset") %>% xml_attr("value") %>%
as.numeric()
mz_offset
intensity_length <- spectra_info %>%
map_dbl(~ xml_find_by_attribute(.$intensity,
"name",
"external array length") %>%
xml_attr("value") %>% as.numeric())
intensity_length
intensity_offset <- spectra_info %>%map_dbl(~ xml_find_by_attribute(.$intensity, "name", "external offset") %>% xml_attr("value") %>% as.numeric())
intensity_offset
get_mz_intensity_arrays <- function () {
filename<-"/Users/yzh/Desktop/R data/HW3/Example_Continuous.ibd"
intensity <- map2(intensity_offset, intensity_length,
function(offset, length) {
f <- file(filename, "rb")
seek(f, offset)
iout <- readBin(f, "double", n=length, size=4)
close(f)
iout })
f <- file(filename, "rb")
seek(f, mz_offset)
mz <- readBin(f, "double", n=mz_length, size=4)
close(f)
return (list(mz,intensity))
}
mz<-get_mz_intensity_arrays()[[1]]
intensity<-get_mz_intensity_arrays()[[2]]
construct <- function(mz, intensity, coord_x,coord_y) {structure(list(mz=mz, intensity=simplify2array(intensity),
coord=tibble(x=coord_x, y=coord_y)), class="msi")
}
msi<-construct(mz, intensity, coord_x, coord_y)
access<-function(object) UseMethod("access")
access.msi <- function (object) return (object)
msi<-access(msi)
plot_msi <- function(a,b) UseMethod("plot_msi")
plot_msi.msi <- function(x, mz) {
idx <- which.min(abs(mz - x$mz))
idf <- x$coord
idf$intensity <- x$intensity[idx,]
ggplot(idf) +
geom_tile(aes(x=x, y=y, fill=intensity)) +
scale_y_reverse() }
plot_msi(msi, 151.9)
